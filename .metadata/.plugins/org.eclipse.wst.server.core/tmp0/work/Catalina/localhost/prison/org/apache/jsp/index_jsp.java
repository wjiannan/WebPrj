/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2018-12-03 02:00:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"utf-8\" />\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"plugins/bootstrap-3.3.7-dist/css/bootstrap.min.css\"/>\r\n");
      out.write("\t\t<title>监狱系统登陆</title>\r\n");
      out.write("\t\t<style type=\"text/css\">\r\n");
      out.write("\t\t\t.login{\r\n");
      out.write("        width:800px;\r\n");
      out.write("        \r\n");
      out.write("        /**设置圆角**/\r\n");
      out.write("        border-radius: 20px;\r\n");
      out.write("        \r\n");
      out.write("        /*设置边框的阴影*/\r\n");
      out.write("        box-shadow: 2px 2px 4px #000;\r\n");
      out.write("      }\r\n");
      out.write("\t\t</style>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("      var ide;\r\n");
      out.write("      var ID=\"1\";\r\n");
      out.write("      var pass;\r\n");
      out.write("      function changeSelect(){\r\n");
      out.write("        var myselect = document.getElementById('ide');\r\n");
      out.write("        var index = myselect.selectedIndex;\r\n");
      out.write("        ID = myselect.options[index].value;\r\n");
      out.write("        ide = myselect.options[index].text;\r\n");
      out.write("      }\r\n");
      out.write("    \tfunction login(){\r\n");
      out.write("        if (ID==\"1\"){\r\n");
      out.write("          location.href=\"view/warden_home-yz.jsp\";\r\n");
      out.write("        }\r\n");
      out.write("        else if(ID==\"2\"){\r\n");
      out.write("          location.href=\"view/yujing_first-zsj.jsp\";\r\n");
      out.write("        }\r\n");
      out.write("        else if(ID==\"3\"){\r\n");
      out.write("          location.href=\"view/hyj-xqbg.jsp\";\r\n");
      out.write("        }\r\n");
      out.write("        else if(ID==\"4\"){\r\n");
      out.write("          location.href=\"view/prisoner_prime_hx.jsp\";\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("    </script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"page-header col-md-offset-1\">\r\n");
      out.write("\t\t\t\t<h1>好再来监狱 <small>一个充满人文关怀的监狱</small></h1>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("      <form class=\"form-horizontal login\">\r\n");
      out.write("        <div style=\"height:50px\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<label for=\"inputIdentified\" class=\"col-md-2 control-label\">身份</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t<select id=\"ide\" class=\"form-control\" onclick=\"changeSelect()\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"1\">监狱长</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2\">狱警</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"3\">法院</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"4\">囚犯</option>\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"form-group has-feedback\">\r\n");
      out.write("\t\t\t\t\t<label for=\"inputName\" class=\"col-md-2 control-label\">编号</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t<input id=\"ID\" type=\"text\" class=\"form-control\"placeholder=\"编号\" maxlength=\"5\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"glyphicon glyphicon-user form-control-feedback\"></span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"form-group has-feedback\">\r\n");
      out.write("\t\t\t\t\t<label for=\"inputPassword\" class=\"col-md-2 control-label\">密码</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t<input id=\"pass\" type=\"password\" class=\"form-control\" placeholder=\"密码\" required>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-offset-2 col-md-10\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"checkbox\">\r\n");
      out.write("\t\t\t\t\t\t\t<label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" value=\"remember-me\">记住密码\r\n");
      out.write("\t\t\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-offset-2 col-md-2\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"btn btn-lg btn-primary btn-block\" type=\"button\" onclick=\"login()\">Sign in</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-2 col-md-offset-1\"><a href=\"view/first.jsp\" class=\"btn btn-lg btn-default btn-block\">游客</a></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("      </form>\r\n");
      out.write("\r\n");
      out.write("    </div> <!-- /container -->\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 引入jquery -->\r\n");
      out.write("\t\t<script src=\"plugins/jquery/jquery.min.js\"></script>\r\n");
      out.write("\t\t<!-- 引入bootstrap.min.js -->\r\n");
      out.write("\t\t<script src=\"plugins/bootstrap-3.3.7-dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
